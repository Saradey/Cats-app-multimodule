// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.20'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    componentUi = '1.0.0'
    appCompatVersion = '1.1.0'
    coreCtx = '1.3.1'
    constraintLayout = '2.0.4'
    componentSwiperefreshlayout = '1.1.0'
    okHttpVersion = '4.9.0'
    retrofitVersion = '2.9.0'
    chuckVersion = '1.1.0'
    roomVersion = '2.2.5'
    glideVersion = '4.11.0'
    daggerVersion = '2.30'
    coroutinesVesrion = '1.3.5'
    coroutinesAdapterVesrion = '0.9.2'
    lifecycleVersion = '2.2.0'
    pagingVersion = '2.1.2'
    materialVersion = '1.3.0-alpha03'
    work_version = '2.4.0'

    cardview = "androidx.cardview:cardview:$componentUi"
    swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$componentSwiperefreshlayout"
    okhttp = "com.squareup.okhttp3:okhttp:$okHttpVersion"
    okhttp3logging = "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    retrofit2 = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    retrofit2converterGson = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    chuckdebug = "com.readystatesoftware.chuck:library:$chuckVersion"
    chuckrelease = "com.readystatesoftware.chuck:library-no-op:$chuckVersion"
    room = "androidx.room:room-runtime:$roomVersion"
    roomKapt = "androidx.room:room-compiler:$roomVersion"
    roomKtx = "androidx.room:room-ktx:$roomVersion"
    roomTest = "androidx.room:room-testing:$roomVersion"
    glide = "com.github.bumptech.glide:glide:$glideVersion"
    glideKapt = "com.github.bumptech.glide:compiler:$glideVersion"
    dagger = "com.google.dagger:dagger:$daggerVersion"
    daggerKapt = "com.google.dagger:dagger-compiler:$daggerVersion"
    coroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVesrion"
    coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVesrion"
    coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVesrion"
    coroutinesAdapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutinesAdapterVesrion"
    viewpager2 = "androidx.viewpager2:viewpager2:$componentUi"
    lifecycleExtensions = "android.arch.lifecycle:extensions:$lifecycleVersion"
    lifecycleKapt = "android.arch.lifecycle:compiler:$lifecycleVersion"
    lifecycleReactiveStreams = "android.arch.lifecycle:reactivestreams:$lifecycleVersion"
    lifecycleViewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    paging = "android.arch.paging:runtime:$pagingVersion"
    material = "com.google.android.material:material:$materialVersion"
    constraintLayout = "androidx.constraintlayout:constraintlayout:$constraintLayout"
    workManager = "androidx.work:work-runtime-ktx:$work_version"
}