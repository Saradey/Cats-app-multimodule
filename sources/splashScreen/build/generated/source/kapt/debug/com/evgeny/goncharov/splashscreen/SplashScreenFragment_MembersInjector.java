// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.splashscreen;

import com.evgeny.goncharov.coreapi.mediators.WallCatsMediator;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashScreenFragment_MembersInjector implements MembersInjector<SplashScreenFragment> {
  private final Provider<WallCatsMediator> wallCatsMediatorProvider;

  public SplashScreenFragment_MembersInjector(Provider<WallCatsMediator> wallCatsMediatorProvider) {
    this.wallCatsMediatorProvider = wallCatsMediatorProvider;
  }

  public static MembersInjector<SplashScreenFragment> create(
      Provider<WallCatsMediator> wallCatsMediatorProvider) {
    return new SplashScreenFragment_MembersInjector(wallCatsMediatorProvider);}

  @Override
  public void injectMembers(SplashScreenFragment instance) {
    injectWallCatsMediator(instance, wallCatsMediatorProvider.get());
  }

  @InjectedFieldSignature("com.evgeny.goncharov.splashscreen.SplashScreenFragment.wallCatsMediator")
  public static void injectWallCatsMediator(SplashScreenFragment instance,
      WallCatsMediator wallCatsMediator) {
    instance.wallCatsMediator = wallCatsMediator;
  }
}
