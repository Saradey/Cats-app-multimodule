// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.wallcats.view.model;

import com.evgeny.goncharov.wallcats.interactors.WallCatInteractor;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WallCatsViewModelImpl_MembersInjector implements MembersInjector<WallCatsViewModelImpl> {
  private final Provider<WallCatInteractor> interactorProvider;

  public WallCatsViewModelImpl_MembersInjector(Provider<WallCatInteractor> interactorProvider) {
    this.interactorProvider = interactorProvider;
  }

  public static MembersInjector<WallCatsViewModelImpl> create(
      Provider<WallCatInteractor> interactorProvider) {
    return new WallCatsViewModelImpl_MembersInjector(interactorProvider);}

  @Override
  public void injectMembers(WallCatsViewModelImpl instance) {
    injectInteractor(instance, interactorProvider.get());
  }

  @InjectedFieldSignature("com.evgeny.goncharov.wallcats.view.model.WallCatsViewModelImpl.interactor")
  public static void injectInteractor(WallCatsViewModelImpl instance,
      WallCatInteractor interactor) {
    instance.interactor = interactor;
  }
}
