// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.wallcats.di.modules;

import com.evgeny.goncharov.wallcats.ui.WallCatsFragment;
import com.evgeny.goncharov.wallcats.view.model.WallCatsViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WallCatsProvidesModule_ProvideWallCatsViewModelFactory implements Factory<WallCatsViewModel> {
  private final Provider<WallCatsFragment> fragmentProvider;

  public WallCatsProvidesModule_ProvideWallCatsViewModelFactory(
      Provider<WallCatsFragment> fragmentProvider) {
    this.fragmentProvider = fragmentProvider;
  }

  @Override
  public WallCatsViewModel get() {
    return provideWallCatsViewModel(fragmentProvider.get());
  }

  public static WallCatsProvidesModule_ProvideWallCatsViewModelFactory create(
      Provider<WallCatsFragment> fragmentProvider) {
    return new WallCatsProvidesModule_ProvideWallCatsViewModelFactory(fragmentProvider);
  }

  public static WallCatsViewModel provideWallCatsViewModel(WallCatsFragment fragment) {
    return Preconditions.checkNotNull(WallCatsProvidesModule.provideWallCatsViewModel(fragment), "Cannot return null from a non-@Nullable @Provides method");
  }
}
