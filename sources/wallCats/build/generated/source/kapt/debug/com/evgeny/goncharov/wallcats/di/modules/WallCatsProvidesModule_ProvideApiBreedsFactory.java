// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.wallcats.di.modules;

import com.evgeny.goncharov.wallcats.rest.ApiBreeds;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WallCatsProvidesModule_ProvideApiBreedsFactory implements Factory<ApiBreeds> {
  private final Provider<Retrofit> retrofitProvider;

  public WallCatsProvidesModule_ProvideApiBreedsFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiBreeds get() {
    return provideApiBreeds(retrofitProvider.get());
  }

  public static WallCatsProvidesModule_ProvideApiBreedsFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new WallCatsProvidesModule_ProvideApiBreedsFactory(retrofitProvider);
  }

  public static ApiBreeds provideApiBreeds(Retrofit retrofit) {
    return Preconditions.checkNotNull(WallCatsProvidesModule.provideApiBreeds(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
