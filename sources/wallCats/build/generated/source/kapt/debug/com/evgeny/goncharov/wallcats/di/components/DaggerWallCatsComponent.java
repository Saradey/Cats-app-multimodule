// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.wallcats.di.components;

import com.evgeny.goncharov.coreapi.providers.ProviderFacade;
import com.evgeny.goncharov.wallcats.di.modules.WallCatsProvidesModule_ProvideApiBreedsFactory;
import com.evgeny.goncharov.wallcats.di.modules.WallCatsProvidesModule_ProvideWallCatsViewModelFactory;
import com.evgeny.goncharov.wallcats.gateways.WallCatGatewayImpl;
import com.evgeny.goncharov.wallcats.interactors.WallCatInteractorImpl;
import com.evgeny.goncharov.wallcats.rest.ApiBreeds;
import com.evgeny.goncharov.wallcats.ui.WallCatsFragment;
import com.evgeny.goncharov.wallcats.ui.WallCatsFragment_MembersInjector;
import com.evgeny.goncharov.wallcats.view.model.WallCatsViewModel;
import com.evgeny.goncharov.wallcats.view.model.WallCatsViewModel_MembersInjector;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerWallCatsComponent implements WallCatsComponent {
  private final WallCatsFragment fragment;

  private final ProviderFacade providerFacade;

  private DaggerWallCatsComponent(ProviderFacade providerFacadeParam,
      WallCatsFragment fragmentParam) {
    this.fragment = fragmentParam;
    this.providerFacade = providerFacadeParam;
  }

  public static WallCatsComponent.Factory factory() {
    return new Factory();
  }

  private WallCatsViewModel getWallCatsViewModel() {
    return WallCatsProvidesModule_ProvideWallCatsViewModelFactory.provideWallCatsViewModel(fragment);}

  private ApiBreeds getApiBreeds() {
    return WallCatsProvidesModule_ProvideApiBreedsFactory.provideApiBreeds(Preconditions.checkNotNull(providerFacade.provideRetrofit(), "Cannot return null from a non-@Nullable component method"));}

  private WallCatGatewayImpl getWallCatGatewayImpl() {
    return new WallCatGatewayImpl(getApiBreeds(), Preconditions.checkNotNull(providerFacade.provideCatsWallDao(), "Cannot return null from a non-@Nullable component method"));}

  private WallCatInteractorImpl getWallCatInteractorImpl() {
    return new WallCatInteractorImpl(getWallCatGatewayImpl());}

  @Override
  public void inject(WallCatsFragment fragment) {
    injectWallCatsFragment(fragment);}

  @Override
  public void inject(WallCatsViewModel viewModel) {
    injectWallCatsViewModel(viewModel);}

  private WallCatsFragment injectWallCatsFragment(WallCatsFragment instance) {
    WallCatsFragment_MembersInjector.injectViewModel(instance, getWallCatsViewModel());
    WallCatsFragment_MembersInjector.injectWallCatsMediator(instance, Preconditions.checkNotNull(providerFacade.provideWallCatsMediator(), "Cannot return null from a non-@Nullable component method"));
    WallCatsFragment_MembersInjector.injectSearchMediator(instance, Preconditions.checkNotNull(providerFacade.provideSearchCatsMediator(), "Cannot return null from a non-@Nullable component method"));
    WallCatsFragment_MembersInjector.injectSettingsMediator(instance, Preconditions.checkNotNull(providerFacade.provideSettingMediator(), "Cannot return null from a non-@Nullable component method"));
    return instance;
  }

  private WallCatsViewModel injectWallCatsViewModel(WallCatsViewModel instance) {
    WallCatsViewModel_MembersInjector.injectInteractor(instance, getWallCatInteractorImpl());
    return instance;
  }

  private static final class Factory implements WallCatsComponent.Factory {
    @Override
    public WallCatsComponent plus(WallCatsFragment fragment, ProviderFacade provide) {
      Preconditions.checkNotNull(fragment);
      Preconditions.checkNotNull(provide);
      return new DaggerWallCatsComponent(provide, fragment);
    }
  }
}
