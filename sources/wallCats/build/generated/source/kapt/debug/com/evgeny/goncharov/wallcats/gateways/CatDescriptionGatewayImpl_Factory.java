// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.wallcats.gateways;

import com.evgeny.goncharov.coreapi.database.dao.CatDescriptionDAO;
import com.evgeny.goncharov.coreapi.database.dao.CatsWallDao;
import com.evgeny.goncharov.coreapi.rest.ApiCatSearch;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CatDescriptionGatewayImpl_Factory implements Factory<CatDescriptionGatewayImpl> {
  private final Provider<ApiCatSearch> apiProvider;

  private final Provider<CatDescriptionDAO> daoProvider;

  private final Provider<CatsWallDao> daoWallCatProvider;

  public CatDescriptionGatewayImpl_Factory(Provider<ApiCatSearch> apiProvider,
      Provider<CatDescriptionDAO> daoProvider, Provider<CatsWallDao> daoWallCatProvider) {
    this.apiProvider = apiProvider;
    this.daoProvider = daoProvider;
    this.daoWallCatProvider = daoWallCatProvider;
  }

  @Override
  public CatDescriptionGatewayImpl get() {
    return newInstance(apiProvider.get(), daoProvider.get(), daoWallCatProvider.get());
  }

  public static CatDescriptionGatewayImpl_Factory create(Provider<ApiCatSearch> apiProvider,
      Provider<CatDescriptionDAO> daoProvider, Provider<CatsWallDao> daoWallCatProvider) {
    return new CatDescriptionGatewayImpl_Factory(apiProvider, daoProvider, daoWallCatProvider);
  }

  public static CatDescriptionGatewayImpl newInstance(ApiCatSearch api, CatDescriptionDAO dao,
      CatsWallDao daoWallCat) {
    return new CatDescriptionGatewayImpl(api, dao, daoWallCat);
  }
}
