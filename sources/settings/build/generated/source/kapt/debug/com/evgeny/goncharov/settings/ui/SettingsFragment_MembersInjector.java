// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.settings.ui;

import com.evgeny.goncharov.settings.view.model.SettingsViewModel;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsFragment_MembersInjector implements MembersInjector<SettingsFragment> {
  private final Provider<SettingsViewModel> viewModelProvider;

  public SettingsFragment_MembersInjector(Provider<SettingsViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<SettingsFragment> create(
      Provider<SettingsViewModel> viewModelProvider) {
    return new SettingsFragment_MembersInjector(viewModelProvider);}

  @Override
  public void injectMembers(SettingsFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("com.evgeny.goncharov.settings.ui.SettingsFragment.viewModel")
  public static void injectViewModel(SettingsFragment instance, SettingsViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
