// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.settings.view.model;

import com.evgeny.goncharov.settings.interactor.SettingsInteractor;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsViewModelImpl_MembersInjector implements MembersInjector<SettingsViewModelImpl> {
  private final Provider<SettingsInteractor> interactorProvider;

  public SettingsViewModelImpl_MembersInjector(Provider<SettingsInteractor> interactorProvider) {
    this.interactorProvider = interactorProvider;
  }

  public static MembersInjector<SettingsViewModelImpl> create(
      Provider<SettingsInteractor> interactorProvider) {
    return new SettingsViewModelImpl_MembersInjector(interactorProvider);}

  @Override
  public void injectMembers(SettingsViewModelImpl instance) {
    injectInteractor(instance, interactorProvider.get());
  }

  @InjectedFieldSignature("com.evgeny.goncharov.settings.view.model.SettingsViewModelImpl.interactor")
  public static void injectInteractor(SettingsViewModelImpl instance,
      SettingsInteractor interactor) {
    instance.interactor = interactor;
  }
}
