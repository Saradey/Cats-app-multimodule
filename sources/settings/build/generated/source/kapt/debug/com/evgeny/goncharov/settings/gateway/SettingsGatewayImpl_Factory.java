// Generated by Dagger (https://dagger.dev).
package com.evgeny.goncharov.settings.gateway;

import com.evgeny.goncharov.coreapi.managers.LanguageManager;
import com.evgeny.goncharov.coreapi.managers.ThemeManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsGatewayImpl_Factory implements Factory<SettingsGatewayImpl> {
  private final Provider<ThemeManager> themeManagerProvider;

  private final Provider<LanguageManager> languageManagerProvider;

  public SettingsGatewayImpl_Factory(Provider<ThemeManager> themeManagerProvider,
      Provider<LanguageManager> languageManagerProvider) {
    this.themeManagerProvider = themeManagerProvider;
    this.languageManagerProvider = languageManagerProvider;
  }

  @Override
  public SettingsGatewayImpl get() {
    return newInstance(themeManagerProvider.get(), languageManagerProvider.get());
  }

  public static SettingsGatewayImpl_Factory create(Provider<ThemeManager> themeManagerProvider,
      Provider<LanguageManager> languageManagerProvider) {
    return new SettingsGatewayImpl_Factory(themeManagerProvider, languageManagerProvider);
  }

  public static SettingsGatewayImpl newInstance(ThemeManager themeManager,
      LanguageManager languageManager) {
    return new SettingsGatewayImpl(themeManager, languageManager);
  }
}
